openapi: 3.0.0

info:
  title: Ref Data API
  description: |
    The API specification for the Ref Data API being developed by the UK Home Office.

    This API specification uses the [OpenAPI](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md) standard.
  version: "0.0.1"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"

# Added by API Auto Mocking Plugin
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/Viable-Data/Reference-Data-Service-API/0.0.1
# servers:
# - url: https://{environment}.homeoffice.gov.uk
#   variables:
#     environment:
#       default: mock-api.refdata-dev    # Mock server in Development
#       enum:
#         - api.refdata            # Production server
#         - api.refdata-dev        # Development server
#         - mock-api.refdata-dev   # Mock server in Development

tags:
- name: "entities"
  description: "Entities are the collection of reference data tables"
  externalDocs:
    description: "Visit the project Wiki"
    url: "https://github.com/UKHomeOffice/RefDataBAU/wiki"
- name: "items"
  description: "Items are the individual records within the reference data tables"

paths:
  /v1/entities:
    get:
      tags:
        - entities
      summary: Gets the list of entities
      description: |
        Get the list of entities that are being managed by the Reference Data Services.

        This includes details about the entitie(s) schemas.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  code:
                    type: integer
                    example: 200
                  data:
                    type: array
                    items: {}
                    example: [
                      {
                        "entityName": "country",
                        "schema": {
                          "label": "Countries",
                          "description": "A list of countries as defined in the ISO 3166-1 Standard.",
                          "schemalastupdated": "10/03/2019",
                          "dataversion": 1,
                          "required": [
                            "id",
                            "iso31661alpha2",
                            "iso31661alpha3",
                            "name",
                            "continent",
                            "iso31661numeric"
                          ],
                          "properties": {
                            "id": {
                              "format": "integer",
                              "type": "integer",
                              "description": {
                                "label": "Identifier",
                                "description": "database unique identity record",
                                "summaryview": "false"
                              }
                            },
                            "iso31661alpha2": {
                              "maxLength": 2,
                              "format": "character varying",
                              "type": "string",
                              "description": {
                                "label": "2 digit alpha code",
                                "description": "Country 2 Character alpha code",
                                "summaryview": "true"
                              }
                            },
                            "iso31661alpha3": {
                              "maxLength": 3,
                              "format": "character varying",
                              "type": "string",
                              "description": {
                                "label": "3 digit alpha code",
                                "description": "Country 3 Character alpha code",
                                "summaryview": "true"
                              }
                            },
                            "name": {
                                "maxLength": 40,
                                "format": "character varying",
                                "type": "string",
                                "description": {
                                  "label": "Country name",
                                  "description": "Country name",
                                  "summaryview": "true"
                                }
                            },
                            "continent": {
                              "maxLength": 2,
                              "format": "character varying",
                              "type": "string",
                              "description": {
                                "label": "Continent",
                                "description": "Countinent country is part of",
                                "summaryview": "true"
                              }
                            },
                            "dial": {
                              "maxLength": 20,
                              "format": "character varying",
                              "type": "string",
                              "description": {
                                "label": "Phone dial code",
                                "description": "Country dailing prefix",
                                "summaryview": "true"
                              }
                            },
                            "iso31661numeric": {
                              "format": "integer",
                              "type": "integer",
                              "description": {
                                "label": "3 digit numeric code",
                                "description": "Country numeric ISO code",
                                "summaryview": "true"
                              }
                            },
                            "validfrom": {
                              "format": "date",
                              "type": "string",
                              "description": {
                                "label": "Valid from date",
                                "description": "Item valid from date",
                                "summaryview": "false"
                              }
                            },
                            "validto": {
                              "format": "date",
                              "type": "string",
                              "description": {
                                "label": "Valid to date",
                                "description": "Item valid to date",
                                "summaryview": "false"
                              }
                            }
                          }
                        },
                        "lastupdated": "10/03/2019",
                        "dataversion": "1"
                      },
                      {
                        "entityName": "nationality",
                        "schema": {
                          "label": "Nationalities",
                          "description": "A list of global nationalities.",
                          "schemalastupdated": "10/03/2019",
                          "dataversion": 1,
                          "required": [
                            "id",
                            "nationality",
                            "visarequired",
                            "evwoptional",
                            "diplomaticexception",
                            "specialexception"
                          ],
                          "properties": {
                            "id": {
                              "format": "integer",
                              "type": "integer",
                              "description": {
                                "label": "Identifier",
                                "description": "database unique identity record",
                                "summaryview": "false"
                              }
                            },
                            "nationality": {
                              "maxLength": 330,
                              "format": "character varying",
                              "type": "string",
                              "description": {
                                "label": "Identifier",
                                "description": "Nationality names",
                                "summaryview": "true"
                              }
                            },
                            "iso31661alpha3": {
                              "maxLength": 3,
                              "format": "character varying",
                              "type": "string",
                              "description": {
                                "label": "3 digit alpha code",
                                "description": "Country 3 Character alpha code",
                                "summaryview": "true"
                              }
                            },
                            "iso31661alpha2": {
                              "maxLength": 2,
                              "format": "character varying",
                              "type": "string",
                              "description": {
                                "label": "2 digit alpha code",
                                "description": "Country 2 Character alpha code",
                                "summaryview": "true"
                              }
                            },
                            "visarequired": {
                              "format": "boolean",
                              "type": "boolean",
                              "description": {
                                "label": "Visa required",
                                "description": "Is VISA required to visit UK",
                                "summaryview": "false"
                              }
                            },
                            "evwoptional": {
                              "format": "boolean",
                              "type": "boolean",
                              "description": {
                                "label": "Optional - EVW",
                                "description": "Is Electronic Visa Waver optional to visit UK",
                                "summaryview": "false"
                              }
                            },
                            "diplomaticexception": {
                              "format": "boolean",
                              "type": "boolean",
                              "description": {
                                "label": "Exception - Diplomatic",
                                "description": "Are there diplomatic exceptions for visiting the UK",
                                "summaryview": "false"
                              }
                            },
                            "specialexception": {
                              "format": "boolean",
                              "type": "boolean",
                              "description": {
                                "label": "Exception - Special",
                                "description": "Are there special exceptions for visiting the UK",
                                "summaryview": "false"
                              }
                            },
                            "countryid": {
                              "format": "integer",
                              "type": "integer",
                              "description": {
                                "label": "Linked country id",
                                "description": "Country link to Country dataset",
                                "summaryview": "false",
                                "linkedrecord": "country(id)"
                              }
                            },
                            "validfrom": {
                              "format": "date",
                              "type": "string",
                              "description": {
                                "label": "Valid from date",
                                "description": "Item valid from date",
                                "summaryview": "false"
                              }
                            },
                            "validto": {
                              "format": "date",
                              "type": "string",
                              "description": {
                                "label": "Valid to date",
                                "description": "Item valid to date",
                                "summaryview": "false"
                              }
                            }
                          },
                        },
                        "lastupdated": "10/03/2019",
                        "dataversion": "1"
                      }
                    ]
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to retrieve tables from database"
        401:
          description: The user is not authorized to perform this request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
  /v1/entities/{name}:
    get:
      tags:
        - entities
      summary: Get an entity data items.
      description: |
        Get an entity data items.

        Supports query string parameters (optional) to search within the entity.
      parameters:
        - in: path
          name: name
          example: country
          schema:
            type: string
          description: The name of the entity.
          required: true
        - in: query
          name: schemaOnly
          schema:
            type: boolean
            default: false
          description: |
            Controls whether the response returns with both entity schema and data items or just the entity schema, defaults to both entity schema and data items, example:

                - /v1/entities/<entity_name>?schemaOnly=true

        - in: query
          name: kwargs
          example: "/v1/entities/<entity_name>?id=eq.3"
          schema:
            type: string
          description: |
            Supported query string parameters:

            Supports single `eq` (equal) filtering, example:

                - /v1/entities/<entity_name>?id=eq.3
                - /v1/entities/<entity_name>?city=eq.London
                - /v1/entities/<entity_name>?email=eq.john@mail.com

            Supports multiple `eq` (equal) filtering, example:

                - /v1/entities/<entity_name>?firstName=eq.Pedro&lastName=eq.Curado
                - /v1/entities/<entity_name>?city=eq.London&postcode=eq.SW13 9RQ

            Supports `eq` (equal) filtering of NULL values, example:

                - /v1/entities/<entity_name>?name=eq.null

            Supports single and multiple `neq` (not equal) filtering, example:

                - /v1/entities/<entity_name>?continent=neq.AS&continent=eq.EU
                - /v1/entities/<entity_name>?continent=neq.AS&continent=neq.EU

            Supports single `in` (in list) filtering, example:

                - /v1/entities/<entity_name>?name=in.(Portugal, United Kingdom)

            Supports single and multiple `gt` (greater than), `lt` (less than) filtering, example:

                - /v1/entities/<entity_name>?shiftstartdatetime=gt.2019-06-20T12:00:00
                - /v1/entities/<entity_name>?shiftstartdatetime=lt.2019-06-20T12:00:00
                - /v1/entities/<entity_name>?shiftstartdatetime=gt.2019-06-20T12:00:00,&shiftstartdatetime=lt.2019-06-22T12:00:00

            Supports single and multiple `gte` (greater than or equal), `lte` (less than or equal) filtering, example:

                - /v1/entities/<entity_name>?age=gte.25
                - /v1/entities/<entity_name>?age=lte.30
                - /v1/entities/<entity_name>?age=gte.25,&age=lte.30

            Not supported yet:

              - Currently only un-quoted values are supported this means that using values with commas will not return any values for instance: street=in.(Flat 2, 33 Joy St, London, Flat 9, 20 Sad St, London)
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  code:
                    type: integer
                    example: 200
                  entityName:
                    type: string,
                    example: "country"
                  entitySchema:
                    type: object
                    example: {
                      "label": "Countries",
                      "description": "A list of countries as defined in the ISO 3166-1 Standard.",
                      "schemalastupdated": "10/03/2019",
                      "dataversion": 1,
                      "required": [
                        "id",
                        "iso31661alpha2",
                        "iso31661alpha3",
                        "name",
                        "continent",
                        "iso31661numeric"
                      ],
                      "properties": {
                        "id": {
                          "format": "integer",
                          "type": "integer",
                          "description": {
                            "label": "Identifier",
                            "description": "database unique identity record",
                            "summaryview": "false"
                          }
                        },
                        "iso31661alpha2": {
                          "maxLength": 2,
                          "format": "character varying",
                          "type": "string",
                          "description": {
                            "label": "2 digit alpha code",
                            "description": "Country 2 Character alpha code",
                            "summaryview": "true"
                          }
                        },
                        "iso31661alpha3": {
                          "maxLength": 3,
                          "format": "character varying",
                          "type": "string",
                          "description": {
                            "label": "3 digit alpha code",
                            "description": "Country 3 Character alpha code",
                            "summaryview": "true"
                          }
                        },
                        "name": {
                            "maxLength": 40,
                            "format": "character varying",
                            "type": "string",
                            "description": {
                              "label": "Country name",
                              "description": "Country name",
                              "summaryview": "true"
                            }
                        },
                        "continent": {
                          "maxLength": 2,
                          "format": "character varying",
                          "type": "string",
                          "description": {
                            "label": "Continent",
                            "description": "Countinent country is part of",
                            "summaryview": "true"
                          }
                        },
                        "dial": {
                          "maxLength": 20,
                          "format": "character varying",
                          "type": "string",
                          "description": {
                            "label": "Phone dial code",
                            "description": "Country dailing prefix",
                            "summaryview": "true"
                          }
                        },
                        "iso31661numeric": {
                          "format": "integer",
                          "type": "integer",
                          "description": {
                            "label": "3 digit numeric code",
                            "description": "Country numeric ISO code",
                            "summaryview": "true"
                          }
                        },
                        "validfrom": {
                          "format": "date",
                          "type": "string",
                          "description": {
                            "label": "Valid from date",
                            "description": "Item valid from date",
                            "summaryview": "false"
                          }
                        },
                        "validto": {
                          "format": "date",
                          "type": "string",
                          "description": {
                            "label": "Valid to date",
                            "description": "Item valid to date",
                            "summaryview": "false"
                          }
                        }
                      }
                    }
                  data:
                    type: array
                    items: {}
                    example: [
                      {
                        "id": 78,
                        "iso31661alpha2": FJ,
                        "iso31661alpha3": FJI,
                        "name": Fiji,
                        "continent": OC,
                        "dial": 679,
                        "iso31661numeric": 242,
                        "validfrom": null,
                        "validto": null
                      },
                      {
                        "id": 79,
                        "iso31661alpha2": FI,
                        "iso31661alpha3": FIN,
                        "name": Finland,
                        "continent": EU,
                        "dial": 358,
                        "iso31661numeric": 246,
                        "validfrom": null,
                        "validto": null
                      },
                      {
                        "id": 80,
                        "iso31661alpha2": FR,
                        "iso31661alpha3": FRA,
                        "name": France,
                        "continent": EU,
                        "dial": 33,
                        "iso31661numeric": 250,
                        "validfrom": null,
                        "validto": null
                      },
                    ]
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to retrieve data from table country"
        401:
          description: The user is not authorized to perform this request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
    patch:
      tags:
        - entities
      summary: Request an update to the schema definition of a entity
      description: |
        Request updates to the definition of an existing entity.

        Each request can only update one field at a time.

      parameters:
        - in: path
          name: name
          schema:
            type: string
          description: The name of the entity.
          required: true
          example: country
        - in: body
          name: entity
          schema:
            type: string
            example: Country
          required: true
          description: The name of the entity that the update is being requested for.
        - in: body
          name: field
          schema:
            type: string
            example: Name
          required: true
          description: The field that the change is being requested for.
        - in: body
          name: newValue
          schema:
            type: string
            example: Italy
          required: true
          description: The new value being requested.
        - in: body
          name: validFrom
          schema:
            type: string
            nullable: true
            example: 10/08/2019
          required: false
          description: The date the new value should be applied from.
        - in: body
          name: validTo
          schema:
            type: string
            nullable: true
            example: null
          required: false
          description: The date the new value should expire.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  requestId:
                    type: string
                    example: "1e8b5842-d704-4931-90c5-b97b767f0986"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
        401:
          description: The user is not authorized to perform this request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        422:
          description: Unprocessable request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example: [
                      {
                        "location": "body",
                        "param": "validFrom",
                        "msg": "Invalid value"
                      },
                      {
                        "location": "body",
                        "param": "validTo",
                        "msg": "Invalid value"
                      }
                    ]
    post:
      tags:
        - entities
      summary: Adds a new data item to the entity.
      description: |
        Add a new data item to the entity.

        Each request can only add one data item to the entity at a time.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          description: The name of the entity that the item is to be added to.
          required: true
          example: country
      requestBody:
        description: The data to be used to create the new item.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                iso31661alpha2:
                  type: string
                  example: FJ
                iso31661alpha3:
                  type: string
                  example: FJI
                name:
                  type: string
                  example: Fiji
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  requestId:
                    type: string
                    example: "1e8b5842-d704-4931-90c5-b97b767f0986"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid JSON object"
        401:
          description: The user is not authorized to perform this request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
  /v1/entities/{name}/items/{id}:
    get:
      tags:
        - items
      summary: Gets a single entity item.
      operationId: getItem
      description: |
        Gets a single entity item.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          description: The name of the entity.
          required: true
          example: country
        - in: path
          name: id
          schema:
            type: string
          description: The id of the entity item.
          required: true
          example: 78
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  code:
                    type: integer
                    example: 200
                  entityName:
                    type: string
                    example: country
                  entitySchema:
                    type: object
                    example: {
                      "label": "Countries",
                      "description": "A list of countries as defined in the ISO 3166-1 Standard.",
                      "schemalastupdated": "10/03/2019",
                      "dataversion": 1,
                      "required": [
                        "id",
                        "iso31661alpha2",
                        "iso31661alpha3",
                        "name",
                        "continent",
                        "iso31661numeric"
                      ],
                      "properties": {
                        "id": {
                          "format": "integer",
                          "type": "integer",
                          "description": {
                            "label": "Identifier",
                            "description": "database unique identity record",
                            "summaryview": "false"
                          }
                        },
                        "iso31661alpha2": {
                          "maxLength": 2,
                          "format": "character varying",
                          "type": "string",
                          "description": {
                            "label": "2 digit alpha code",
                            "description": "Country 2 Character alpha code",
                            "summaryview": "true"
                          }
                        },
                        "iso31661alpha3": {
                          "maxLength": 3,
                          "format": "character varying",
                          "type": "string",
                          "description": {
                            "label": "3 digit alpha code",
                            "description": "Country 3 Character alpha code",
                            "summaryview": "true"
                          }
                        },
                        "name": {
                            "maxLength": 40,
                            "format": "character varying",
                            "type": "string",
                            "description": {
                              "label": "Country name",
                              "description": "Country name",
                              "summaryview": "true"
                            }
                        },
                        "continent": {
                          "maxLength": 2,
                          "format": "character varying",
                          "type": "string",
                          "description": {
                            "label": "Continent",
                            "description": "Countinent country is part of",
                            "summaryview": "true"
                          }
                        },
                        "dial": {
                          "maxLength": 20,
                          "format": "character varying",
                          "type": "string",
                          "description": {
                            "label": "Phone dial code",
                            "description": "Country dailing prefix",
                            "summaryview": "true"
                          }
                        },
                        "iso31661numeric": {
                          "format": "integer",
                          "type": "integer",
                          "description": {
                            "label": "3 digit numeric code",
                            "description": "Country numeric ISO code",
                            "summaryview": "true"
                          }
                        },
                        "validfrom": {
                          "format": "date",
                          "type": "string",
                          "description": {
                            "label": "Valid from date",
                            "description": "Item valid from date",
                            "summaryview": "false"
                          }
                        },
                        "validto": {
                          "format": "date",
                          "type": "string",
                          "description": {
                            "label": "Valid to date",
                            "description": "Item valid to date",
                            "summaryview": "false"
                          }
                        }
                      }
                    }
                  itemid:
                    type: string
                    example: 78
                  data:
                    type: object
                    properties: {}
                    example: {
                      "id": 78,
                      "iso31661alpha2": FJ,
                      "iso31661alpha3": FJI,
                      "name": Fiji,
                      "continent": OC,
                      "dial": 679,
                      "iso31661numeric": 242,
                      "validfrom": null,
                      "validto": null
                    }
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to retrieve data from table country"
        401:
          description: The user is not authorized to perform this request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
    patch:
      tags:
        - items
      summary: Update a single entity item.
      description: |
        Request an update of an entity item field.

        Each request can only update one field at at time.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          description: The name of the entity.
          required: true
          example: country
        - in: path
          name: id
          schema:
            type: string
          description: The id of the entity item to be updated.
          required: true
          example: 23
        - in: body
          name: field
          schema:
            type: string
            example: name
          required: true
          description: The field that the change is being requested for.
        - in: body
          name: newValue
          schema:
            type: string
            example: Belize
          required: true
          description: The new value being requested.
        - in: body
          name: validFrom
          schema:
            type: string
            nullable: true
            example: 12/03/2020
          required: false
          description: The date the new value should be applied from.
        - in: body
          name: validTo
          schema:
            type: string
            nullable: true
            example: 12/05/2040
          required: false
          description: The date the new value should expire.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  requestId:
                    type: string
                    example: "1e8b5842-d704-4931-90c5-b97b767f0986"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
        401:
          description: The user is not authorized to perform this request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        422:
          description: Unprocessable request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example: [
                      {
                        "location": "body",
                        "param": "field",
                        "msg": "Invalid value"
                      }
                    ]
  /v2/entities/{name}:
    get:
      tags:
        - entities
      summary: Get an entity data items.
      description: |
        Get an entity data items.

        Supports query string parameters (optional) to search within the entity.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          example: country
          description: The name of the entity.
          required: true
        - in: query
          name: mode
          schema:
            type: string
          example: /v2/entities/<entity_name>?mode=dataOnly
          description: |
            Controls whether the response is returned with both schema and data or just either the schema or data, defaults to both entity schema and data items, example:

            Response with only the schema, example:

                - /v2/entities/<entity_name>?mode=schemaOnly

            Response with only the data, example:

                - /v2/entities/<entity_name>?mode=dataOnly
        - in: query
          name: select
          schema:
            type: string
          example: /v2/entities/<entity_name>?select=name
          description: |
            The columns required, if not passed it defaults to all columns.

            Supports single and multiple columns selection, example:

                - /v2/entities/<entity_name>?select=name
                - /v2/entities/<entity_name>?select=name,age
        - in: query
          name: filter
          schema:
            type: string
          example: /v2/entities/<entity_name>?filter=id=eq.3
          description: |
            Supports single `eq` (equal) filtering, example:

                - /v2/entities/<entity_name>?filter=id=eq.3
                - /v2/entities/<entity_name>?filter=city=eq.London
                - /v2/entities/<entity_name>?filter=email=eq.john@mail.com

            Supports multiple `eq` (equal) filtering, example:

                - /v2/entities/<entity_name>?filter=firstName=eq.Pedro&filter=lastName=eq.Curado
                - /v2/entities/<entity_name>?filter=city=eq.London&filter=postcode=eq.SW13 9RQ

            Supports `eq` (equal) filtering of NULL values, example:

                - /v2/entities/<entity_name>?name=eq.null

            Supports single and multiple `neq` (not equal) filtering, example:

                - /v2/entities/<entity_name>?filter=continent=neq.AS&filter=continent=eq.EU
                - /v2/entities/<entity_name>?filter=continent=neq.AS&filter=continent=neq.EU

            Supports single `in` (in list) filtering, example:

                - /v2/entities/<entity_name>?filter=name=in.(Portugal, United Kingdom)

            Supports single and multiple `gt` (greater than), `lt` (less than) filtering, example:

                - /v2/entities/<entity_name>?filter=shiftstartdatetime=gt.2019-06-20T12:00:00
                - /v2/entities/<entity_name>?filter=shiftstartdatetime=lt.2019-06-20T12:00:00
                - /v2/entities/<entity_name>?filter=shiftstartdatetime=gt.2019-06-20T12:00:00,&filter=shiftstartdatetime=lt.2019-06-22T12:00:00

            Supports single and multiple `gte` (greater than or equal), `lte` (less than or equal) filtering, example:

                - /v2/entities/<entity_name>?filter=age=gte.25
                - /v2/entities/<entity_name>?filter=age=lte.30
                - /v2/entities/<entity_name>?filter=age=gte.25,&filter=age=lte.30

            Supports `sort` (sorting) of columns ascending and descending, example:

                - /v2/entities/<entity_name>?sort=name.asc
                - /v2/entities/<entity_name>?filter=age=eq.34&sort=name.desc

            Supports `limit` of rows being returned, example:

                - /v2/entities/<entity_name>?filter=surname=eq.Smith&limit=5

            Not supported yet:

              - Currently only un-quoted values are supported this means that using values with commas will not return any values for instance: street=in.(Flat 2, 33 Joy St, London, Flat 9, 20 Sad St, London)
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  code:
                    type: integer
                    example: 200
                  entityName:
                    type: string
                    example: country
                  entitySchema:
                    type: object
                    example: {
                      "label": "Countries",
                      "description": "A list of countries as defined in the ISO 3166-1 Standard.",
                      "schemalastupdated": "10/03/2019",
                      "dataversion": 1,
                      "required": [
                        "id",
                        "iso31661alpha2",
                        "iso31661alpha3",
                        "name",
                        "continent",
                        "iso31661numeric"
                      ],
                      "properties": {
                        "id": {
                          "format": "integer",
                          "type": "integer",
                          "description": {
                            "label": "Identifier",
                            "description": "database unique identity record",
                            "summaryview": "false"
                          }
                        },
                        "iso31661alpha2": {
                          "maxLength": 2,
                          "format": "character varying",
                          "type": "string",
                          "description": {
                            "label": "2 digit alpha code",
                            "description": "Country 2 Character alpha code",
                            "summaryview": "true"
                          }
                        },
                        "iso31661alpha3": {
                          "maxLength": 3,
                          "format": "character varying",
                          "type": "string",
                          "description": {
                            "label": "3 digit alpha code",
                            "description": "Country 3 Character alpha code",
                            "summaryview": "true"
                          }
                        },
                        "name": {
                            "maxLength": 40,
                            "format": "character varying",
                            "type": "string",
                            "description": {
                              "label": "Country name",
                              "description": "Country name",
                              "summaryview": "true"
                            }
                        },
                        "continent": {
                          "maxLength": 2,
                          "format": "character varying",
                          "type": "string",
                          "description": {
                            "label": "Continent",
                            "description": "Countinent country is part of",
                            "summaryview": "true"
                          }
                        },
                        "dial": {
                          "maxLength": 20,
                          "format": "character varying",
                          "type": "string",
                          "description": {
                            "label": "Phone dial code",
                            "description": "Country dailing prefix",
                            "summaryview": "true"
                          }
                        },
                        "iso31661numeric": {
                          "format": "integer",
                          "type": "integer",
                          "description": {
                            "label": "3 digit numeric code",
                            "description": "Country numeric ISO code",
                            "summaryview": "true"
                          }
                        },
                        "validfrom": {
                          "format": "date",
                          "type": "string",
                          "description": {
                            "label": "Valid from date",
                            "description": "Item valid from date",
                            "summaryview": "false"
                          }
                        },
                        "validto": {
                          "format": "date",
                          "type": "string",
                          "description": {
                            "label": "Valid to date",
                            "description": "Item valid to date",
                            "summaryview": "false"
                          }
                        }
                      }
                    }
                  data:
                    type: array
                    items: {}
                    example: [
                      {
                        "id": 78,
                        "iso31661alpha2": FJ,
                        "iso31661alpha3": FJI,
                        "name": Fiji,
                        "continent": OC,
                        "dial": 679,
                        "iso31661numeric": 242,
                        "validfrom": null,
                        "validto": null
                      },
                      {
                        "id": 79,
                        "iso31661alpha2": FI,
                        "iso31661alpha3": FIN,
                        "name": Finland,
                        "continent": EU,
                        "dial": 358,
                        "iso31661numeric": 246,
                        "validfrom": null,
                        "validto": null
                      },
                      {
                        "id": 80,
                        "iso31661alpha2": FR,
                        "iso31661alpha3": FRA,
                        "name": France,
                        "continent": EU,
                        "dial": 33,
                        "iso31661numeric": 250,
                        "validfrom": null,
                        "validto": null
                      },
                    ]
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to retrieve data from table country"
        401:
          description: The user is not authorized to perform this request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
security:
  - oAuthKeycloak: []

components:
  securitySchemes:
    oAuthKeycloak:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://sso-dev.notprod.homeoffice.gov.uk/auth/realms/cop-dev/protocol/openid-connect/auth
          tokenUrl: https://sso-dev.notprod.homeoffice.gov.uk/auth/realms/cop-dev/protocol/openid-connect/token
          scopes: {}
